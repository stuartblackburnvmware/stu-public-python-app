apiVersion: v1
kind: Pod
metadata:
  annotations:
  labels:
  name: test-pod
  namespace: stu-ns
spec:
  containers:
  - env:
    - name: PORT
      value: "8080"
    - name: K_REVISION
      value: stu-public-python-app-00004
    - name: K_CONFIGURATION
      value: stu-public-python-app
    - name: K_SERVICE
      value: stu-public-python-app
    image: stutapregistry.azurecr.io/appimages/stu-public-python-app-stu-ns@sha256:163d0bb6e8d08aa09ac61a59c51d99dfb9ac4c1abede8246c4aea5843d18a7f4
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        httpGet:
          path: /wait-for-drain
          port: 8022
          scheme: HTTP
    name: workload
    ports:
    - containerPort: 8080
      name: user-port
      protocol: TCP
    resources: {}
    securityContext:
      runAsUser: 1000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/app
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-f4fsn
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  imagePullSecrets:
  - name: registries-credentials
  nodeName: aks-default-41786231-vmss000000
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 300
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: log-volume
    emptyDir: {}
  - name: kube-api-access-f4fsn
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
